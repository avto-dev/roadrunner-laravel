#!/usr/bin/env php
<?php

declare(strict_types = 1);

use AvtoDev\RoadRunnerLaravel\Worker;
use AvtoDev\RoadRunnerLaravel\WorkerInterface;
use Illuminate\Contracts\Foundation\Application;

\ini_set('display_errors', 'stderr');

/**
 * Load autoloader.
 *
 * @return bool
 */
$autoload = static function (): bool {
    foreach (['vendor', '../vendor', '../../vendor', '..', '../..', '../../..'] as $path) {
        $autoload_file = __DIR__ . '/' . $path . '/autoload.php';
        if (\is_file($autoload_file)) {
            require $autoload_file;

            return true;
        }
    }

    return false;
};

/**
 * Application factory.
 *
 * @return Application
 */
$appFactory = static function (): Application {
    foreach (['../../..', '../..', '..', '../vendor/laravel/laravel'] as $path) {
        $bootstrap = __DIR__ . '/' . $path . '/bootstrap/app.php';
        if (\is_file($bootstrap)) {
            return require $bootstrap;
        }
    }

    throw new RuntimeException('Laravel bootstrap file (bootstrap/app.php) was not found');
};

// Load composer autoloader
if ($autoload() !== true) {
    \fwrite(
        STDERR,
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );

    die(1);
}

unset($autoload);

// Create application instance
$app = $appFactory();

/** @var WorkerInterface $worker Create worker instance (make check for registered class at first) */
$worker = $app->bound(WorkerInterface::class)
    ? $app->make(WorkerInterface::class)
    : $app->make(Worker::class);

$worker->start();
